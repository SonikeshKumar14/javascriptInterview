// Array Destructuring and swap question.

const arr = [1, 2, 3, 4, 5];

// let [arr1, arr2, arr3, arr4, arr5] = arr;
// console.log(arr1, arr2, arr3, arr4, arr5);

let [arr1, arr2, ...arr3] = arr;
console.log(arr1, arr2);
console.log(arr3);

let num1 = 60;
let num2 = 50;// yaha par (;) lag bohot jaruri kyuki javascript kabhi kabhi unsual behave karta hai
// swap these 

[num1, num2] = [num2, num1];
console.log(num1, num2);

// Set dataStructure
const mySet = new Set();

mySet.add(1);
mySet.add(2);
mySet.add(3);
mySet.add(4);

console.log(mySet.size);
console.log(mySet.has(3));
console.log(mySet.delete(4));

for(let value of mySet){
  console.log(value);
}

let arr = [1, 2, 2, 3, 4, 4];
const mySetArr = [...new Set(arr)];
console.log(mySetArr)


// for-of for [arr, map, set, string] to iterate over values
// for-in for an array to iterate over a key
// for-in for objects to enumerate its (object's) properties.

const myLuckyNumbers = [1, 2, 3, 4, 5, 6, 6, 7];
for(let num of myLuckyNumbers){
   console.log("myLuckyNumbers " + num)
}

const object = {a : 1, b : 2, c : 3};
for(let key in object){
  console.log(`the keys are ${key}`);
}

const arr = ["vinod", 1, 3, 4, 5];
for(let key in arr){
  console.log(`the keys are ${key}`);
}
// find key use of for-of
const object = {a : 1, b : 2, c : 3};
for(let key of Object.keys(object)){
   console.log(`the keys are ${key}`);
}

//Q7 Optional Chaining with object and array

const user1 = {
  name: "Thapa",
  age: 28,
  address: {
    street: "Main St",
    city: "New Road",
    state: "PK",
    zip: "10101",
  }
}
console.log(user1?.address.city)
console.log(user1?.address?.Roadmap)
//user.address?.Roadmap mai pehle vo check karega kya address object mai hai agar hai toh vo Roadmap par jayega 
const user = [
  {name: "Jhon", age: 30},
  {name: "Jane", age: 25},
  {name: "Bob", age: 35}
]

console.log(user[2]?.name)










