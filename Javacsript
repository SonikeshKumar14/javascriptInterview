// Q1. Remove null and undefined from object.
const obj = {
   a: 1,
   b: null,
   c: undefined,
   d: 'hello'
};
// to change from object to array Object.entries(obj) method.
// to change from array to object Object.fromEntries
const newOjbect = Object.fromEntries(Object.entries(obj).filter(([_, val])=> val!= null));
console.log(newOjbect)

// Q2. Create an Object from the pairs of key and value.

const ArrData = (arr) =>{
  return Object.fromEntries(arr);
}

console.log(ArrData([
  ['a', 1],
  ['b', 2],
  ['c', 3],
  ['d', 4],
]))

//Q3 Throttling
<body onscroll="showCount()">
  <section>
    <p class="n_count">Normal Count</p>
    <p class="t_count">Throttle Count</p>
    <p class="d_count">Debounce Count</p>
  </section>

  <script>
     const normal_div = document.querySelector('.n_count');
     const throttle_div = document.querySelector('.t_count');
     const debounce_div = document.querySelector('.d_count');
     let n_count = 0;
     let t_count = 0;
     isScrolling = true;
     let interval;
     const normalCount = () => {
        n_count++;
        normal_div.innerHTML = `Normal Count: ${n_count}`;
     }
     const throttleCount = () => {
        if(isScrolling == true){
            t_count++;
            isScrolling = false;
            throttle_div.innerHTML = `Throttle Count: ${t_count}`;
            setTimeout(() => {
               isScrolling = true;
            }, 1000);
     }
    // Throttle after some time ke bad fire karta hai function ko scrolling ya searching mai
    // debounce jab fire karta hai function jab ham scrolling rok dete hai ya searching mai likha band kar dete hai
     const debounceCount = () => {
       clearTimout(interval);
       interval = setTimeout(() =>{
        d_count++;
        debounce_div.innerHTML = `Debounce Count: ${d_count}`;
       },1000)
     }
     const showCount = () =>{
        normalCount();
        throttleCount();
        debounceCount();
     }
</script>
</body>

// Q5. Find smallest and largest Number.

const getMinimumNo = (arr) => arr.reduce((smallNum, num) => Math.min(smallNum, num))
const getMaximumNo = (arr) => arr.reduce((smallNum, num) => Math.max(smallNum, num))

const arr = [12, 3, 5, 89, 1];
console.log(getMinimumNo(arr), getMaximumNo(arr))

// Q6. Merge two sorted array and in ascending and descending order.

let arr1 = [1, 3, 4, 5, 5], arr2 = [2, 4, 6, 6, 8];

let arr3 = [...arr1, ...arr2];

// arr.sort() is trah number sort nhi hote kyuki javascript mai sort string ke liye hota hai or vo number ko bhi string samajta hai
arr3.sort((a,b)=> a-b); // for ascending order

// console.log(arr3.sort((a,b)=> b-a)); // for descending order
arr3 = [...new Set(arr3)];
console.log(arr3);

// Q6. Merge two sorted array and in ascending and descending order.

let arr1 = [1, 3, 4, 5, 5], arr2 = [2, 4, 6, 6, 8];

let arr3 = [...arr1, ...arr2];

// arr.sort() is trah number sort nhi hote kyuki javascript mai sort string ke liye hota hai or vo number ko bhi string samajta hai
arr3.sort((a,b)=> a-b); // for ascending order

// console.log(arr3.sort((a,b)=> b-a)); // for descending order
arr3 = [...new Set(arr3)];
console.log(arr3);
